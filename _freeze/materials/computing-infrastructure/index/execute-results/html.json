{
  "hash": "71b9ed3ccc8d7f504ac36c63e205b468",
  "result": {
    "markdown": "---\ntitle: \"Computing infrastructure for teaching data science\"\nsubtitle: \"posit::conf(2023) <br> Teaching Data Science Masterclass\"\nauthor: \"Mine Ã‡etinkaya-Rundel\"\nfooter: \"[ðŸ”— pos.it/teach-ds-conf23](https://pos.it/teach-ds-conf23) / Module 2\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: ../slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: c\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:\n      width: 200\n---\n\n\n\n\n# Recap\n\n## This morning...\n\n::: incremental\n-   Module 1: Teaching data science with the tidyverse and Quarto\n-   Module 2: Teaching data science with Git and GitHub\n-   Everything we've discussed and recommended as good practice requires a ready-to-go computing environment, as opposed to one where students need to install various software before they can make their first data visualization\n:::\n\n## Why RStudio in the cloud?\n\n-   Reduce friction at first exposure to R\n-   Avoid local installation\n-   Install R and RStudio on a server and provide access to students:\n    -   Centralized RStudio server (\\*)\n    -   Dockerized RStudio server (\\*)\n    -   Posit Cloud\n\n::: aside\n(\\*) Ã‡etinkaya-Rundel, Mine, and Rundel, Colin. \"Infrastructure and tools for teaching computing throughout the statistical curriculum.\" The American Statistician (2018). Part of the Practical Data Science for Stats collection.\n:::\n\n# Hello Posit Cloud!\n\n## What is Posit Cloud?\n\n::: columns\n::: {.column width=\"30%\"}\n![](images/cloud.png)\n:::\n\n::: {.column width=\"70%\"}\nWe created **Posit Cloud** to make it easy for professionals, hobbyists, trainers, teachers, and students to do, share, teach, and learn data science using R.\n:::\n:::\n\n## An RStudio project\n\n![](images/rstudio-ide.png){fig-align=\"center\" width=\"1000\"}\n\n## A Posit Cloud project\n\n![](images/rstudio-cloud.png){fig-align=\"center\" width=\"1000\"}\n\n## Why Posit Cloud? {.small}\n\n-   Does not require IT support\n-   Features designed for instructors:\n    -   Classes can be organized in workspaces\n    -   Members can be assigned different roles: instructor, TA, student\n    -   Projects can be public or private\n    -   Projects can be made into assignments\n    -   Students can make copies of projects created by instructor\n    -   Instructor can peek into student projects\n    -   A default project template can ensure same packages in each new project created in the workspace\n    -   Git works out of the box\n\n## Contexts\n\n::: incremental\n-   Semester long courses\n    -   Intro data science / statistics: little to no background in stats, data science, programming\n    -   Upper level data science / statistics: Varied computing background and different computer setups\n-   Shorter workshops: Likely no opportunity to communicate pre-workshop instructions, varied computing background and learning goals\n:::\n\n## Your turn!\n\n::: task\nLog out of Posit Cloud and log back in.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_3d72d5e7\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Workspaces\n\n-   When you create an account on Posit Cloud you get a workspace of your own\n\n-   You can add a new workspace and control its permissions\n\n-   Projects in either workspace can be public or private\n\n## Projects\n\n-   A new project in Posit Cloud\n\n-   is basically a new project in the RStudio IDE\n\n::: callout-tip\n## Say yes to projects\n\nIf you use RStudio, use projects! Trust me, you won't regret it. Find out more at <https://r4ds.had.co.nz/workflow-projects.html>.\n:::\n\n## Projects from Git\n\n-   A new project from Git Repository in Posit Cloud\n-   is creating (cloning) a project from a Git repository RStudio\n\n# Teaching a short workshop\n\n## Setup in 280 characters\n\n![](images/cloud-setup-tweet.png){fig-align=\"center\" width=\"1000\"}\n\n## Single project, instructor view\n\n::: demo\n{{< fa keyboard >}} **Demo:**\n\n-   Create a new project in **your workspace**\n\n-   Install all required packages and add all required files\n\n-   Change permissions\n\n-   Share URL\n:::\n\n## Single project, student view\n\n::: demo\n{{< fa keyboard >}} **Demo:**\n\n-   Go to the URL shared with you\n\n-   Pick up the project where the instructor left off\n:::\n\n## Sharing an individual project {.small}\n\n::: columns\n::: {.column width=\"50%\"}\n**Good!**\n\n-   Students land directly in a project upon login\n-   Works well for workshops where all work will be completed in a single project\n-   Also great for sharing code in general, e.g. collaboration, reprexes, etc.\n:::\n\n::: {.column width=\"50%\"}\n**Not so good...**\n\n-   Students need to remember to make a copy of the project (which means you need to remember to remind them!)\n-   Changes you make after student launches the project won't propagate to their project\n:::\n:::\n\n## Your turn: Create a shareable project {.small}\n\n::: task\n**Your role:** Instructor\n\n-   Create a new project in **your workspace** and give it a name.\n-   Create a new Quarto document in the project -- just the new document template is fine!\n-   Change the access level of the project so others can see it as well.\n-   Grab the project URL and share it with your neighbor.\n:::\n\n<br>\n\n::: task\n**Your role:** Student\n\nAccess your neighbor's project as if you're the student and they're the instructor.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_f1190b23\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Teaching a longer course\n\n## Creating a workspace, instructor view\n\n::: demo\n{{< fa keyboard >}} **Demo:**\n\n-   Create a new workspace and add a description\n\n-   Set permissions for various roles\n\n-   Set up a template, and make it the default\n\n-   Set up a new assignment\n\n-   Invite students via a sharing link\n:::\n\n## Permission levels\n\n| role        | permission                                       | course role |\n|---------------|-------------------------------------------|---------------|\n| admin       | manage users, view, edit and manage all projects | instructor  |\n| moderator   | view, edit and manage all projects               | TA          |\n| contributor | create, edit and manage their own projects       | student     |\n| viewer      | view projects shared with everyone               | auditor     |\n\n## Sharing a workspace\n\n::: columns\n::: {.column width=\"50%\"}\n**Good!**\n\n-   Various permission levels\n-   Base projects with desired packages installed\n-   Assignments, which remove the need to remind students to make a copy of the project before starting work\n-   Ability to peek into students' projects\n:::\n\n::: {.column width=\"50%\"}\n**Not so good...**\n\n-   Students land in the workspace, may need to provide instructions for the next steps\n-   You can update the base project throughout the course, but it will only be applied to projects created going forward\n:::\n:::\n\n# Cloud miscellania\n\n## Git integration\n\nDefault project template can be used, so New Project from Git Repository also has the right packages installed!\n\n![](images/git-integration.png)\n\n## Institution accounts\n\n![](images/institution-account.png){fig-align=\"center\"}\n\n## Dashboards\n\nStudent usage / engagement metrics\n\n![](images/dashboard.png){fig-align=\"center\" width=\"1000\"}\n\n## Collaborative editing\n\n**TO DO:** Fill it in!\n\n## Collaborative editing\n\n**TO DO:** Fill it in!\n\n# Parting remarks\n\n## Tips\n\n-   Each project is allocated 0.5 GB of RAM by default\n    -   Test things out before assignments involving large datasets\n-   What your students see is not always what you see\n    -   Create a secondary account and add as a student\n\n## Posit Cloud and your course\n\n-   If teaching without Git and GitHub, sufficiently rich functionality for fully supporting your course\n\n-   If teaching with Git and GitHub, there are some rough edges (that I hope will be ironed out soon):\n\n    -   You need to set a PAT for each project, which is a setup that is not a realistic GitHub workflow and requires either that you have as many PATs as projects laying around or you have a good password manager where you can store the PAT and copy it and set it in each project. Thanks to the **usethis** package this can be done with 2 commands without going to the Terminal, which is good if that's not part of the course learning goals.\n\n    -   You need to run `git config credential.helper store` in the Terminal to make sure PAT is available in that project \"forever\", or until the PAT itself expires.\n\n## Discussion\n\n::: question\nWhat models can you envision for collecting assignments and providing feedback when teaching with Posit Cloud?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountdown(minutes = 3, font_size = \"1.5em\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_dcf4a2b6\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1.5em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# To be or not to be, in the IDE\n\n## Work in the IDE\n\n-   So far we've demonstrated and discussed computational infrastructure options where students are \"in the IDE\", where they can **do** data science\n\n-   Another approach, with the opportunity for even more immediate hands-on interaction, is running code in the browser, to quickly **experience** data science\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}